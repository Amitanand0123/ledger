name: Continuous Deployment

on:
  push:
    branches:
      - 'main'

jobs:
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  deploy-backend:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    needs: deploy-frontend # Only run if the frontend deployment starts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Trigger Render Deploy Hook for Backend
        run: |
          curl -X POST \
            "https://api.render.com/v1/services/${{ secrets.RENDER_BACKEND_SERVICE_ID }}/deploys" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -d '{}'

  deploy-ai-service:
    name: Deploy AI Service to Render
    runs-on: ubuntu-latest
    needs: deploy-frontend # Only run if the frontend deployment starts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Trigger Render Deploy Hook for AI Service
        run: |
          curl -X POST \
            "https://api.render.com/v1/services/${{ secrets.RENDER_AI_SERVICE_ID }}/deploys" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -d '{}'
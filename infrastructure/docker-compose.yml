services:
  # --- Backend Application ---
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ../backend:/app
      - /app/node_modules
    env_file:
      - ../backend/.env
    depends_on:
      - postgres
    networks:
      - app-network

  # --- Frontend Application ---
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        # This build arg ensures the Next.js container knows how to reach the backend container
        NEXT_PUBLIC_API_URL: http://backend:5000
    ports:
      - "3021:3021"
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ../frontend/.env.local
    command: npm run dev # Use 'dev' for local development with hot-reloading
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  # --- AI Service ---
  ai-service:
    build:
      context: ../ai-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000" # Expose the FastAPI port
    volumes:
      - ../ai-service:/app
    env_file:
      - ../ai-service/.env
    networks:
      - app-network

  # --- Database ---
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: jobtrackerdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: